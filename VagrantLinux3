#!/bin/bash
if [$(id - u) -eq0]: then
   read-p "Enter username : " username
   read-s-p "Enter password: " password
   egrep "^$username" /etc/passwd >/dev/null
if [$?-eq0]; then
   echo "$username exists!"
   exit 1
else
   pass=$(perl -e 'print cyrpt($ARGV[0], "password")'$password)
   useradd -m-p $pass$username 
   [$?-eq0]&&echo "User has been added to system!"|| echo "Fail to add a user!"
  fl
else
   echo "Only root may add a user to the system"
fl   

#!/bin/bash
while [ true ] ;do
used=`free -m |awk 'NR==3 {print $4}'`
if [ $used -lt 1500 ] && [ $used -gt 800 ]; then
echo "Free memory is below 1500MB. Possible memory leak!!!"

fi
sleep 5
done


#!/bin/bash
# Sample script to demonstrate the creation of an HTML report using shell scripting
# Web directory
WEB_DIR=/var/www/html
# A little CSS and table layout to make the report look a little nicer
echo "


equiv='Content-Type' content='text/html; charset=UTF-8' />

" > $WEB_DIR/report.html
# View hostname and insert it at the top of the html body
HOST=$(hostname)
echo "Filesystem usage for host $HOST<br>
Last updated: $(date)<br><br>



<tr><th class='titulo'>Filesystem
<th class='titulo'>Size
<th class='titulo'>Use %
</tr>" >> $WEB_DIR/report.html


# Read the output of df -h line by line

while read line; do
echo "<tr><td align='center'>" >> $WEB_DIR/report.html
echo $line | awk '{print $1}' >> $WEB_DIR/report.html
echo "<td align='center'>" >> $WEB_DIR/report.html
echo $line | awk '{print $2}' >> $WEB_DIR/report.html
echo "<td align='center'>" >> $WEB_DIR/report.html
echo $line | awk '{print $5}' >> $WEB_DIR/report.html
echo "</tr>" >> $WEB_DIR/report.html
done < <(df -h | grep -vi filesystem)
echo "" >> $WEB_DIR/report.html
